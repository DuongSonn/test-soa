// Code generated by mockery v2.52.3. DO NOT EDIT.

package mocks

import (
	context "context"
	entity "sondth-test_soa/app/entity"

	mock "github.com/stretchr/testify/mock"

	uuid "github.com/google/uuid"
)

// ICategoryHelper is an autogenerated mock type for the ICategoryHelper type
type ICategoryHelper struct {
	mock.Mock
}

// ValidateCategoryID provides a mock function with given fields: ctx, categoryID
func (_m *ICategoryHelper) ValidateCategoryID(ctx context.Context, categoryID uuid.UUID) (*entity.Category, error) {
	ret := _m.Called(ctx, categoryID)

	if len(ret) == 0 {
		panic("no return value specified for ValidateCategoryID")
	}

	var r0 *entity.Category
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID) (*entity.Category, error)); ok {
		return rf(ctx, categoryID)
	}
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID) *entity.Category); ok {
		r0 = rf(ctx, categoryID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entity.Category)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, uuid.UUID) error); ok {
		r1 = rf(ctx, categoryID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewICategoryHelper creates a new instance of ICategoryHelper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewICategoryHelper(t interface {
	mock.TestingT
	Cleanup(func())
}) *ICategoryHelper {
	mock := &ICategoryHelper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
